import { AdminUpdate<%= modelClassName %>Input } from '@<%= npmScope %>/sdk'
import { useWebSdk } from '@<%= npmScope %>/<%= app %>-shell-data-access'
import { notifyError, notifySuccess } from '@<%= npmScope %>/<%= app %>-ui-notifications'
import { useQuery } from '@tanstack/react-query'

export function useAdminFindOne<%= modelClassName %>({ <%= modelPropertyName %>Id }:{ <%= modelPropertyName %>Id: string }) {
  const sdk = useWebSdk()
  const query = useQuery({
    queryKey: ['admin', 'find-one-<%= modelFileName %>', <%= modelPropertyName %>Id],
    queryFn: () => sdk.adminFindOne<%= modelClassName %>({ <%= modelPropertyName %>Id }).then((res) => res.data),
    retry: 0
  })
  const item = query.data?.item ?? undefined

  return {
    item,
    query,
    update<%= modelClassName %>: async (input: AdminUpdate<%= modelClassName %>Input) =>
      sdk
        .adminUpdate<%= modelClassName %>({ <%= modelPropertyName %>Id, input })
        .then((res) => res.data)
        .then(async (res) => {
          if (res) {
            notifySuccess('<%= modelClassName %> updated')
            await query.refetch()
            return true
          }
          notifyError('<%= modelClassName %> not updated')
          return false
        })
        .catch((err) => {
          notifyError(err.message)
          return false
        }),
  }
}
